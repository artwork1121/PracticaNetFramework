@model NET_Framework.Models.Product

@{
    ViewBag.Title = "Create";
    ViewBag.BrandId = new long();
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Productos", FormMethod.Post, new { enctype = "multipart/form-data" , DataAjax = "false", runat="server"}))
{@Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!--
    <div class="form-group">
        @@Html.LabelFor(model => model.BrandId, htmlAttributes: new { @@class = "control-label col-md-2" })
        <div class="col-md-2">
            @@Html.DropDownList("BrandId", new List<SelectListItem>
                {
                new SelectListItem { Text = "Male", Value="Male" },
           new SelectListItem { Text = "Female", Value="Female" }
               }, "Select BrandId", new { @@class = "form-control" })
        </div>
    </div>
    -->
    
    <select class="form-select" id="BrandId" name="BrandId">
        @foreach (var brand in (List<NET_Framework.Models.Brand>)@ViewBag.brands)
        {
            <option value="@brand.Id">@brand.BrandName</option>
        }
    </select>

    <div class="mb-3">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
        <!--<label for="Image" class="form-label">Imagen</label>-->
        <input class="form-control" type="file" id="img" accept="image/png, image/jpeg">
        <span id="file-err" class="text-danger"></span>
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mb-3">
        <input type="submit" value="Crear" class="btn btn-success" />
    </div>
</div>
}

<div class="btn btn-light">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    /*
    let a
    $("#cbo-brand").ready(function (){
        //ViewBag.BrandId = $("#cbo-brand option:selected").val();
        a = $("#cbo-brand option:selected").val();
    })
    $("#cbo-brand").change(function (){
       a = $("#cbo-brand option:selected").val();
    });
    $("#BrandId").options = brands;
    */
    $("#Image").change(function () {
        $("#file-err").text((this.files[0].size / 1024).toFixed(2) + " KB");
    })
</script>
