@model NET_Framework.Models.Product

@{
    ViewBag.Title = "Create";
    ViewBag.BrandId = new long();
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--
        <div class="form-group">
            @@Html.LabelFor(model => model.BrandId, htmlAttributes: new { @@class = "control-label col-md-2" })
            <div class="col-md-2">
                @@Html.DropDownList("BrandId", new List<SelectListItem>
                    {
                    new SelectListItem { Text = "Male", Value="Male" },
               new SelectListItem { Text = "Female", Value="Female" }
                   }, "Select BrandId", new { @@class = "form-control" })
            </div>
        </div>
        -->

        <select class="form-select" id="BrandId" name="BrandId">
            @foreach (var brand in (List<NET_Framework.Models.Brand>)@ViewBag.brands)
            {
                <option value="@brand.Id">@brand.BrandName</option>
            }
        </select>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    let a
    $("#cbo-brand").ready(function (){
        //ViewBag.BrandId = $("#cbo-brand option:selected").val();
        a = $("#cbo-brand option:selected").val();
    })
    $("#cbo-brand").change(function (){
       a = $("#cbo-brand option:selected").val();
    });
    $("#BrandId").options = brands;
</script>
